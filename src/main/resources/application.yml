spring:
  datasource:
      url: jdbc:postgresql://${POSTGRES_CONNECTION_URL:localhost:5432}/${POSTGRES_DATABASE:order_db}?ssl=${DBCONNECTION_SSL_ENABLE:false}&&sslfactory=org.postgresql.ssl.DefaultJavaSSLFactory
      username: ${POSTGRES_USERNAME:postgres}
      password: ${POSTGRES_PASSWORD:changeme}
      driver-class-name: org.postgresql.Driver
  jpa:
      show-sql: false
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
          naming:
              implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
              physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
          ddl-auto: none
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
aws:
  region: us-east-1
  s3:
    purchase-order-bucket: purchase-order-bucket
    endpoint: http://localhost:4566
  sqs:
    endpoint: http://localhost:4566
    purchase-order-queue-group: purchase-order
    purchase-order-queue-name: purchase-order-queue.fifo
  sns:
    endpoint: http://localhost:4566
    purchase-order-topic-group: purchase-order-topic-group
    purchase-order-topic-name: purchase-order-topic.fifo
  ssm:
    endpoint: http://localhost:4566
    eureka-url: /config/ecommerce-eureka-service-url
  secretsmanager:
    endpoint: http://localhost:4566
    db-credentials: order_db_credentials